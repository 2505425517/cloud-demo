@startuml
class com.mywork.message.controller.MessageController {
- MessageServiceImpl messageService
+ Result findAll()
+ Result add(Message)
+ Result findById(Integer)
+ Result update(Message)
+ Result del(List<Integer>)
}
interface com.mywork.message.mapper.MessageMapper {
+ List<Message> selectbyid(Integer)
}
class com.mywork.message.service.MessageServiceImpl {
- MessageMapper messageMapper
+ List<Message> findAll()
+ Boolean add(Message)
+ List<Message> findByUserId(Integer)
+ Boolean update(Message)
+ Boolean del(List<Integer>)
}
class com.mywork.message.pojo.Message {
- Integer messageid
- String messageType
- Integer messageFromid
- Integer messageGetid
- String messageDate
- Date messageTime
- Integer messageStatus
+ getter() and setter()
}
interface com.mywork.message.service.MessageService {
+ List<Message> findAll()
+ Boolean add(Message)
~ List<Message> findByUserId(Integer)
+ Boolean update(Message)
+ Boolean del(List<Integer>)
}
com.mywork.message.controller.MessageController ..> com.mywork.message.pojo.Message
com.mywork.message.controller.MessageController ..> com.mywork.message.service.MessageService
com.mywork.message.service.MessageServiceImpl ..> com.mywork.message.mapper.MessageMapper
com.mywork.message.controller.MessageController -[hidden]> com.mywork.message.service.MessageService
com.mywork.message.mapper.MessageMapper -[hidden]> com.mywork.message.service.MessageServiceImpl
tk.mybatis.mapper.common.Mapper <|-- com.mywork.message.mapper.MessageMapper
com.mywork.message.service.MessageService <|.. com.mywork.message.service.MessageServiceImpl
@enduml