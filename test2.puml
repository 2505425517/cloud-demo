@startuml
interface com.mywork.user.mapper.UserMapper {
}
interface com.mywork.user.service.UserService {
~ List<User> findAll()
+ Page<User> search(Map)
+ Boolean add(User)
+ User findById(Integer)
+ Boolean update(User)
+ Boolean del(List<Integer>)
~ User querycareerById(Integer)
}
class com.mywork.user.pojo.User {
- Integer userid
- String name
- Integer age
- String gender
- String nationality
- String mailAddress
- String phoneNum
- String precentcity
- String address
- String highestQualification
- String status
- Career[] careers
}
class com.mywork.user.controller.UserController {
- UserService userService
+ Result queryById(Integer)
+ com.mywork.user.common.Result find()
+ com.mywork.user.common.PageResult search(Map)
+ com.mywork.user.common.Result add(User)
+ Result findById(Integer)
+ Result update(User)
+ Result del(List<Integer>)
}
class com.mywork.user.service.UserServiceImpl {
- UserMapper userMapper
- RestTemplate restTemplate
+ User querycareerById(Integer)
+ List<User> findAll()
+ Page<User> search(Map)
+ Boolean add(User)
+ User findById(Integer)
+ Boolean update(User)
+ Boolean del(List<Integer>)
}


tk.mybatis.mapper.common.Mapper <|-- com.mywork.user.mapper.UserMapper
java.io.Serializable <|.. com.mywork.user.pojo.User
com.mywork.user.service.UserService <|.. com.mywork.user.service.UserServiceImpl
com.mywork.user.common.Result <|-- com.mywork.user.service.UserServiceImpl
@enduml